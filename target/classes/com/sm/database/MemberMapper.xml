<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper namespace란? mapper 파일이 여러개일 때, 해당하는 파일을 식별할 수 있는 식별자 이름을 정해줄 
	때, 해당 mapper파일과 연결이 되는 DAO 클래스 이름을 일치시켜주는것을 원칙으로 함 -->


<mapper namespace="com.sm.model.DAO">
	<!-- mapper 태그 안쪽에 SQL 구문을 기술 -->
	<!-- id : DAO에서 sql Session을 사용해 Mapper파일 안쪽에 있는 SQL구문을 찾아 줄때 사용하는 값 중복 
		허용하지 않는다. -->
	<insert id="join" parameterType="com.sm.model.MemberDTO">
		INSERT INTO tb_member (mem_id, mem_pw, mem_name, mem_birthdate, mem_gender)
		VALUES(#{mem_id}, #{mem_pw}, #{mem_name}, #{mem_birthdate},
		#{mem_gender})
	</insert>

	<select id="login" parameterType="com.sm.model.MemberDTO"
		resultType="com.sm.model.MemberDTO">
		SELECT mem_id, mem_name, mem_type FROM tb_member WHERE mem_id = #{mem_id}
		AND mem_pw = #{mem_pw}
	</select>

	<select id="selectAll" resultType="com.sm.model.MemberDTO">
		SELECT mem_id, mem_name, mem_type
		FROM tb_member
	</select>

	<select id="write" parameterType="com.sm.model.MemberDTO">
		INSERT INTO tb_post (POST_SEQ, mem_id, post_title, post_content)
		VALUES(TB_POST_SEQ.NEXTVAL, #{mem_id},#{post_title},#{post_content})
	</select>
	
	<!-- 공지사항 (notice)테이블 생성 후 수정 -->
	<select id="notice" parameterType="com.sm.model.MemberDTO">
		INSERT INTO tb_post (POST_SEQ, mem_id, post_title, post_content)
		VALUES(TB_POST_SEQ.NEXTVAL, #{mem_id},#{post_title},#{post_content})
	</select>
	
	<select id="communityView" resultType="com.sm.model.MemberDTO">
		SELECT post_seq, post_title, post_content, post_views, post_likes, created_at, mem_id
		FROM tb_post
	</select>
	


	<!-- resultType 동작원리 : 나만의 자료형으로 resultType을 명시해놓았다면 : 1. 기본 생성자를 호출해서 객체를 
		생성(mybatis가 알아서) : 2. 조회한 테이블의 컬러명과 일치하는 필드가 있는지 확인 : 3. 해당 필드의 setter 메소드를 
		호출해서 값을 채우는 구조 ★ setter 메소드가 없거나, 기본생성자가 없어져버린 경우 문제가 발생하기도 한다! 알아두면 좋은 Tip! 
		: resultType 에는 java에 기본으로 존재하는 자료형은 굳이 명시하지 않앙도 된다! -->

	<update id="update" parameterType="com.sm.model.MemberDTO">
		UPDATE tb_member SET mem_pw = #{mem_pw}, mem_id = #{mem_id}, mem_type =
		#{mem_type}
		WHERE mem_id = #{mem_id}
	</update>

	<insert id="test" parameterType="com.sm.model.TestDTO">
        INSERT INTO tb_test (TEST_SEQ, MEM_ID, TEST_ANSWER, MEM_ANSWER, TEST_CORR)
        VALUES (TB_TEST_SEQ.NEXTVAL, #{mem_id}, #{test_answer}, #{mem_answer}, #{test_corr})
    </insert>


</mapper>